//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SEC.ENTITI
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
 

    public partial class EvaluacionEntities : DbContext
    {
        public EvaluacionEntities()
            : base("name=EvaluacionEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DetallePrueba> DetallePrueba { get; set; }
        public virtual DbSet<Niveles> Niveles { get; set; }
        public virtual DbSet<NivelesUsuarios> NivelesUsuarios { get; set; }
        public virtual DbSet<Opciones> Opciones { get; set; }
        public virtual DbSet<Preguntas> Preguntas { get; set; }
        public virtual DbSet<Pruebas> Pruebas { get; set; }
        public virtual DbSet<Tecnologias> Tecnologias { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
    
        public virtual ObjectResult<PreguntasporTecnologia_Result> PreguntasporTecnologia(Nullable<int> idTecnologia, Nullable<int> noPreguntas)
        {
            var idTecnologiaParameter = idTecnologia.HasValue ?
                new ObjectParameter("idTecnologia", idTecnologia) :
                new ObjectParameter("idTecnologia", typeof(int));
    
            var noPreguntasParameter = noPreguntas.HasValue ?
                new ObjectParameter("noPreguntas", noPreguntas) :
                new ObjectParameter("noPreguntas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PreguntasporTecnologia_Result>("PreguntasporTecnologia", idTecnologiaParameter, noPreguntasParameter);
        }
    
        public virtual ObjectResult<PreguntasporTecnologiaV2_Result> PreguntasporTecnologiaV2(Nullable<int> idTecnologia, Nullable<int> noPreguntas)
        {
            var idTecnologiaParameter = idTecnologia.HasValue ?
                new ObjectParameter("idTecnologia", idTecnologia) :
                new ObjectParameter("idTecnologia", typeof(int));
    
            var noPreguntasParameter = noPreguntas.HasValue ?
                new ObjectParameter("noPreguntas", noPreguntas) :
                new ObjectParameter("noPreguntas", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<PreguntasporTecnologiaV2_Result>("PreguntasporTecnologiaV2", idTecnologiaParameter, noPreguntasParameter);
        }
    }
}
