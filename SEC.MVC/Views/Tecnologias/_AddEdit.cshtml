@model SEC.MVC.Models.TecnologiasModel

@using (Html.BeginForm("SaveAsync", "Tecnologias", FormMethod.Post, new { id = "form" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdTecnologia)


        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.NombreTec, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NombreTec, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NombreTec, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.TecActiva, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.TecActiva)
                        @Html.ValidationMessageFor(model => model.TecActiva, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none">
            @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">


            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Imagen, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="custom-file">
                        <input type="file" class="custom-file-input" id="iptImagen" accept="image/png, image/jpeg" />
                        <label class="custom-file-label form-control-file" for="iptimagen"></label>
                    </div>
                </div>
            </div>

            <div class="form-group col-md-6">
                <div class="col-md-10">
                    <img src="@Model.Imagen" alt="" class="rounded mx-auto d-block" id="prevImg" width="100" />
                    @Html.EditorFor(model => model.Imagen, new { htmlAttributes = new { @class = "form-control d-none" } })
                    @Html.ValidationMessageFor(model => model.Imagen, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="btnSubmit" value="Guardar" class="btn btn-primary mb-2" />
            </div>
        </div>
    </div>
}
<script>var base64 = '';
    var prev = document.getElementById('prevImg');
    var img = document.getElementById('Imagen');
    $("#iptImagen").change(function () {
        var file = this.files[0];
        var reader = new FileReader();

        //Event handler
        reader.addEventListener("load", function () {
            base64 = reader.result;
            prev.src = base64;
            img.value = base64;
        }, false);

        //Fires the load event
        if (file) {
            reader.readAsDataURL(file);
        }
        $(this).next('.form-control-file').addClass('selected').html(file.name);
    });</script>

